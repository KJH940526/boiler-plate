환경설정

{ "emmet.includeLanguages": { "javascript": "javascriptreact" } }

ctrl+, 해서 설정 들어가서
1.작업영역(WorkSpace setting)
2.Include Languages > setting.json 편집 클릭
3. 위 텍스트 복사 붙여넣기

div>form>(labe+index)*2 이런식으로 쓰고 tab 누르면

<div>
      <form action="">
        <labe></labe>
        <index></index>
        <labe></labe>
        <index></index>
      </form>
    </div>





git!! 

git --version 으로 다운로드 확인

처음에 git 저장소를 만들어주기 위해서 git init을 한다.

git의 상태를 보기 위해서는 git status를 상용한다.

git add . 으로 모든 파일을 git에 보낼 수 있다.

다시 git status로 확인할 수 있다.

깃 저장소에 올릴떄는 라이브러리는 보내지 않는다.

package.json의 dependencies를 보고 다시 install 해준다.

라이브러리를 뺴고 올리기 위해서는 .gitignore를 만들고,

node_modules라고 작성한다.

git에 모듈이 올라갔을 경우 git rm --cached node_modules -r을 사용하여

git에 있는 모듈을 제거한다.

git commit -m "처음 저장소에 올림" 을 통해서 깃 로컬저장소에 올라감.

SSH(Secure Shell)를 이용해 git을 git hub에 연결하기!  

git push를 이용해서 git hub에 올리기

ssh 설정 방법!

ssh key를 만들기 위해서 https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

를 들어간다. 
                                                //git hub 이메일 
git bash를 열고 ssh-keygen -t rsa -b 4096 -C "enddl0121@naver.com" 을 입력한다. 

SSH Agent를 background에 킨다 

$ # start the ssh-agent in the background
$ eval $(ssh-agent -s) 를 치면 Agent pid값이 나온다.

https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account

를 통해서 ssh key를 git hub account에 올린다.

git hub에 푸쉬하는법 push
git remote add origin https://github.com/KJH940526/boiler-plate.git 깃허브 레파지토리 위치저장
git push -u origin master 

// 그 이후부터

git add .
git commit -m "깃내용"
git push -u origin master


---19강
hoc는 컴포넌트안에 있는 함수로 다른 컴포넌트를 가지는 함수
            //자격 -> 함수 함수에 따라 다른것도 가능
ex) hoc에서 자격이 되면 관리자 페이지로 보내고 아니면 다른 페이지로 보낸다.
ex) 로그인된 사람만 들어오고 아니면 다른 페이지로 보낸다.

--확장프로그램 es7치면 나오는 react 추가 확장프로그램 설치하기
--rfce로 함수형 컴포넌트 만들기

//boiler plate react 구조 설명
_actions, _reducers => Redux를 위한 폴더들

components/views -> 이 안에 Page들을 넣는다.

components/views/Sections => 이 안에는 해당 페이지에 
관련된 css파일이나, component 들을 넣는다.

App.js Routring 관련 일을 처리한다.
Config.js 환경 변수같은 것들을 정하는 곳이다.

hoc-> Higher Order Component의 약자로 설명은 위에..
자세한건 따로 공부하기

utils 여러 군데에서 쓰일수 있는 것들을 이 폴더에 넣어서 어디서든
꺼내 쓸수 있게 하기 위함




//22장
CORS 이슈, Proxy 설정
Cross-Origin Resource Sharing (CORS)보안을 위해서 접속이 막히는데
을 해결하기 위해서 Proxy 설정을 해야한다.
그러기 위해서는 추가로 모듈을 설치해줘야한다.
npm install http-proxy-middleware --save
https://create-react-app.dev/docs/proxying-api-requests-in-development/


//23장
Porxy Server
1)IP를 Proxy Server에서 임의로 바꿔 버릴수 있다.
그래서 인터넷에서 접근하는 사람의 IP를 모르게 된다.
2) 보내는 데이터를 임의로 바꿀수 있다.

--> 사용하는 이유 EX) 방화벽기능, 웹필터 기능, 캐쉬데이터, 공유데이터 제공
자세한건 추가공부


//24장 Concurrently를 이용해서를 이용해서 프론트, 백서버 한번에 켜기
npm install concurrently --save